import { ok, equal } from "assert";
import Web3 from "web3";
import { Arlo } from "../types/web3-v1-contracts/Arlo";

/*   
   - see no benefit of using the import statement:
     import ArloContract from "../abis/Arlo.json";
     as there is type error and needs to cast it 
     back to any when passing in ArloContract.abi
     to the web3 contract constructor
       
*/
const { abi, bytecode } = require("../abis/Arlo.json");

const ganache = require("ganache-cli");

const web3 = new Web3(ganache.provider());

let accounts: string[];
let contract: Arlo;
beforeEach(async () => {
  accounts = await web3.eth.getAccounts();

  /* #01-01 */
  contract = (await new web3.eth.Contract(abi)
    .deploy({
      data: bytecode,
    })
    /* glitch 
       - need to convert to unknown before convert to
         the TS type generated by the typechain 
    */
    .send({ from: accounts[0], gas: 1000000 })) as unknown as Arlo;
});

describe("Arlo Token", () => {
  it("deploys a contract", () => {
    ok(contract.options.address);
  });

  it("checks contract name", async () => {
    const name = await contract.methods.name().call();
    equal(name, "Arlo Token");
  });
});
